<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
 Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.

 CDDL HEADER START

 The contents of this file are subject to the terms of the
 Common Development and Distribution License (the "License").
 You may not use this file except in compliance with the License.

 You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
 or http://www.opensolaris.org/os/licensing.
 See the License for the specific language governing permissions
 and limitations under the License.

 When distributing Covered Code, include this CDDL HEADER in each
 file and include the License file at usr/src/OPENSOLARIS.LICENSE.
 If applicable, add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your own identifying
 information: Portions Copyright [yyyy] [name of copyright owner]

 CDDL HEADER END

	NOTE:  This service manifest is not editable; its contents will
	be overwritten by package or patch operations, including
	operating system upgrade.  Make customizations in a different
	file.

	Service manifest for sFlow agent.
-->

<service_bundle type='manifest' name='SUNWsflow:sflow'>

<service
	name='network/sflow'
	type='service'
	version='1'>

	<!--
	    We need network to be setup before we can export stats through
	    sflow and hence this dependency.
	-->
	<dependency
		name='network'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/physical:default'/>
	</dependency>

	<instance name='default' enabled='true'>
		<exec_method
			type='method'
			name='stop'
			exec=':kill'
			timeout_seconds='120' >
		</exec_method>

		<exec_method
			type='method'
			name='start'
			exec='/lib/svc/method/svc-sflowd'
			timeout_seconds='120' >
		</exec_method>

		<!--
		    refresh re-reads few configuration variables and will
		    not take much time.
		-->
		<exec_method
			type='method'
			name='refresh'
			exec=':kill -HUP'
			timeout_seconds='60' >
		</exec_method>

		<!-- to start/stop the sflow service -->
		<property_group name='general' type='framework'>
			<propval name='action_authorization' type='astring' 
				value='solaris.smf.manage.sflow' />
			<propval name='value_authorization' type='astring' 
				value='solaris.smf.manage.sflow' />
		</property_group>

		<property_group name='startd' type='framework'>
			<!--
			    sub-process core dumps shouldn't restart session
			-->
			<propval name='ignore_error' type='astring'
			     value='core,signal' />
		</property_group>

		<property_group name='sflow' type='application'>
			<stability value='Evolving' />
			<propval name='collectorAddress' type='astring'
			     value='' />
			<propval name='collectorPort' type='integer'
			     value='' />
			<propval name='value_authorization' type='astring'
				value='solaris.network.sflow' />
		</property_group>

	</instance>

	<stability value='Unstable' />

</service>

</service_bundle>
